spring:
  profiles:
    default: local

---

server:
  port: ${API_SERVER_PORT}
client:
  host: ${CLIENT_HOST}

spring:
  application:
    name: NangPaGo

  # 엘라스틱 서치
  elasticsearch:
    uris: ${ELASTICSEARCH_HOST}
    username: ${ELASTICSEARCH_USERNAME}
    password: ${ELASTICSEARCH_PASSWORD}

  # 환경변수에서 불러오도록 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 10
      idle-timeout: 300000
      connection-timeout: 30000
      max-lifetime: 1500000

  # Table 자동 생성 방지
  jpa:
    hibernate:
      ddl-auto: none
      open-in-view: false

  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - id
              - nickname
              - email
              - profile_image
          kakao:
            client-name: kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
              - profile_image
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  servlet:
    multipart:
      max-file-size: 10MB  # 파일 크기 제한 설정 (예: 10MB)
      max-request-size: 10MB  # 요청 크기 제한 설정 (예: 10MB)

jwt:
  secret: ${JWT_SECRET_KEY}
  token:
    access-expiration-time: ${JWT_ACCESS_EXPIRATION_TIME}
    refresh-expiration-time: ${JWT_REFRESH_EXPIRATION_TIME}

# Swagger-UI 관련 설정
springdoc:
  packages-to-scan: com.mars.NangPaGo.domain
  api-docs:
    path: /api-docs
    version: openapi_3_0
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
    display-request-duration: true
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8

# 개발(로컬) 환경: local / 배포 환경: prod
---

spring:
  config:
    activate:
      on-profile: local

logging:
  level:
    root: info

---

spring:
  config:
    activate:
      on-profile: prod

logging:
  file:
    name: /logs/application.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 7
  level:
    root: warn

---

# Test 코드 실행용 데이터베이스로 연결
spring:
  config:
    activate:
      on-profile: test

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${TEST_DB_HOST}:${TEST_DB_PORT}/${TEST_DB_NAME}
    username: ${TEST_DB_USERNAME}
    password: ${TEST_DB_PASSWORD}

  # Table 자동 생성 방지
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        highlight_sql: true
        format_sql: true
        use_sql_comments: true
